#pragma once

#include <range/v3/all.hpp>
#include <mff/algorithms.h>
#include <mff/graphics/vulkan/version.h>

namespace mff::vulkan {

enum class FormatType {
    Float,
    Uint,
    Sint,
    Depth,
    Stencil,
    DepthStencil,
    Compressed
};

struct FormatInfo {
    vk::Format format;
    FormatType type;
};

const std::vector<FormatInfo> kINFOS = {
    FormatInfo{vk::Format::eR4G4UnormPack8, FormatType::Float},
    FormatInfo{vk::Format::eR4G4B4A4UnormPack16, FormatType::Float},
    FormatInfo{vk::Format::eB4G4R4A4UnormPack16, FormatType::Float},
    FormatInfo{vk::Format::eR5G6B5UnormPack16, FormatType::Float},
    FormatInfo{vk::Format::eB5G6R5UnormPack16, FormatType::Float},
    FormatInfo{vk::Format::eR5G5B5A1UnormPack16, FormatType::Float},
    FormatInfo{vk::Format::eB5G5R5A1UnormPack16, FormatType::Float},
    FormatInfo{vk::Format::eA1R5G5B5UnormPack16, FormatType::Float},
    FormatInfo{vk::Format::eR8Unorm, FormatType::Float},
    FormatInfo{vk::Format::eR8Snorm, FormatType::Float},
    FormatInfo{vk::Format::eR8Uscaled, FormatType::Float},
    FormatInfo{vk::Format::eR8Sscaled, FormatType::Float},
    FormatInfo{vk::Format::eR8Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR8Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR8Srgb, FormatType::Float},
    FormatInfo{vk::Format::eR8G8Unorm, FormatType::Float},
    FormatInfo{vk::Format::eR8G8Snorm, FormatType::Float},
    FormatInfo{vk::Format::eR8G8Uscaled, FormatType::Float},
    FormatInfo{vk::Format::eR8G8Sscaled, FormatType::Float},
    FormatInfo{vk::Format::eR8G8Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR8G8Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR8G8Srgb, FormatType::Float},
    FormatInfo{vk::Format::eR8G8B8Unorm, FormatType::Float},
    FormatInfo{vk::Format::eR8G8B8Snorm, FormatType::Float},
    FormatInfo{vk::Format::eR8G8B8Uscaled, FormatType::Float},
    FormatInfo{vk::Format::eR8G8B8Sscaled, FormatType::Float},
    FormatInfo{vk::Format::eR8G8B8Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR8G8B8Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR8G8B8Srgb, FormatType::Float},
    FormatInfo{vk::Format::eB8G8R8Unorm, FormatType::Float},
    FormatInfo{vk::Format::eB8G8R8Snorm, FormatType::Float},
    FormatInfo{vk::Format::eB8G8R8Uscaled, FormatType::Float},
    FormatInfo{vk::Format::eB8G8R8Sscaled, FormatType::Float},
    FormatInfo{vk::Format::eB8G8R8Uint, FormatType::Uint},
    FormatInfo{vk::Format::eB8G8R8Sint, FormatType::Sint},
    FormatInfo{vk::Format::eB8G8R8Srgb, FormatType::Float},
    FormatInfo{vk::Format::eR8G8B8A8Unorm, FormatType::Float},
    FormatInfo{vk::Format::eR8G8B8A8Snorm, FormatType::Float},
    FormatInfo{vk::Format::eR8G8B8A8Uscaled, FormatType::Float},
    FormatInfo{vk::Format::eR8G8B8A8Sscaled, FormatType::Float},
    FormatInfo{vk::Format::eR8G8B8A8Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR8G8B8A8Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR8G8B8A8Srgb, FormatType::Float},
    FormatInfo{vk::Format::eB8G8R8A8Unorm, FormatType::Float},
    FormatInfo{vk::Format::eB8G8R8A8Snorm, FormatType::Float},
    FormatInfo{vk::Format::eB8G8R8A8Uscaled, FormatType::Float},
    FormatInfo{vk::Format::eB8G8R8A8Sscaled, FormatType::Float},
    FormatInfo{vk::Format::eB8G8R8A8Uint, FormatType::Uint},
    FormatInfo{vk::Format::eB8G8R8A8Sint, FormatType::Sint},
    FormatInfo{vk::Format::eB8G8R8A8Srgb, FormatType::Float},
    FormatInfo{vk::Format::eA8B8G8R8UnormPack32, FormatType::Float},
    FormatInfo{vk::Format::eA8B8G8R8SnormPack32, FormatType::Float},
    FormatInfo{vk::Format::eA8B8G8R8UscaledPack32, FormatType::Float},
    FormatInfo{vk::Format::eA8B8G8R8SscaledPack32, FormatType::Float},
    FormatInfo{vk::Format::eA8B8G8R8UintPack32, FormatType::Uint},
    FormatInfo{vk::Format::eA8B8G8R8SintPack32, FormatType::Sint},
    FormatInfo{vk::Format::eA8B8G8R8SrgbPack32, FormatType::Float},
    FormatInfo{vk::Format::eA2R10G10B10UnormPack32, FormatType::Float},
    FormatInfo{vk::Format::eA2R10G10B10SnormPack32, FormatType::Float},
    FormatInfo{vk::Format::eA2R10G10B10UscaledPack32, FormatType::Float},
    FormatInfo{vk::Format::eA2R10G10B10SscaledPack32, FormatType::Float},
    FormatInfo{vk::Format::eA2R10G10B10UintPack32, FormatType::Uint},
    FormatInfo{vk::Format::eA2R10G10B10SintPack32, FormatType::Sint},
    FormatInfo{vk::Format::eA2B10G10R10UnormPack32, FormatType::Float},
    FormatInfo{vk::Format::eA2B10G10R10SnormPack32, FormatType::Float},
    FormatInfo{vk::Format::eA2B10G10R10UscaledPack32, FormatType::Float},
    FormatInfo{vk::Format::eA2B10G10R10SscaledPack32, FormatType::Float},
    FormatInfo{vk::Format::eA2B10G10R10UintPack32, FormatType::Uint},
    FormatInfo{vk::Format::eA2B10G10R10SintPack32, FormatType::Sint},
    FormatInfo{vk::Format::eR16Unorm, FormatType::Float},
    FormatInfo{vk::Format::eR16Snorm, FormatType::Float},
    FormatInfo{vk::Format::eR16Uscaled, FormatType::Float},
    FormatInfo{vk::Format::eR16Sscaled, FormatType::Float},
    FormatInfo{vk::Format::eR16Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR16Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR16Sfloat, FormatType::Float},
    FormatInfo{vk::Format::eR16G16Unorm, FormatType::Float},
    FormatInfo{vk::Format::eR16G16Snorm, FormatType::Float},
    FormatInfo{vk::Format::eR16G16Uscaled, FormatType::Float},
    FormatInfo{vk::Format::eR16G16Sscaled, FormatType::Float},
    FormatInfo{vk::Format::eR16G16Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR16G16Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR16G16Sfloat, FormatType::Float},
    FormatInfo{vk::Format::eR16G16B16Unorm, FormatType::Float},
    FormatInfo{vk::Format::eR16G16B16Snorm, FormatType::Float},
    FormatInfo{vk::Format::eR16G16B16Uscaled, FormatType::Float},
    FormatInfo{vk::Format::eR16G16B16Sscaled, FormatType::Float},
    FormatInfo{vk::Format::eR16G16B16Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR16G16B16Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR16G16B16Sfloat, FormatType::Float},
    FormatInfo{vk::Format::eR16G16B16A16Unorm, FormatType::Float},
    FormatInfo{vk::Format::eR16G16B16A16Snorm, FormatType::Float},
    FormatInfo{vk::Format::eR16G16B16A16Uscaled, FormatType::Float},
    FormatInfo{vk::Format::eR16G16B16A16Sscaled, FormatType::Float},
    FormatInfo{vk::Format::eR16G16B16A16Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR16G16B16A16Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR16G16B16A16Sfloat, FormatType::Float},
    FormatInfo{vk::Format::eR32Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR32Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR32Sfloat, FormatType::Float},
    FormatInfo{vk::Format::eR32G32Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR32G32Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR32G32Sfloat, FormatType::Float},
    FormatInfo{vk::Format::eR32G32B32Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR32G32B32Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR32G32B32Sfloat, FormatType::Float},
    FormatInfo{vk::Format::eR32G32B32A32Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR32G32B32A32Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR32G32B32A32Sfloat, FormatType::Float},
    FormatInfo{vk::Format::eR64Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR64Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR64Sfloat, FormatType::Float},
    FormatInfo{vk::Format::eR64G64Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR64G64Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR64G64Sfloat, FormatType::Float},
    FormatInfo{vk::Format::eR64G64B64Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR64G64B64Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR64G64B64Sfloat, FormatType::Float},
    FormatInfo{vk::Format::eR64G64B64A64Uint, FormatType::Uint},
    FormatInfo{vk::Format::eR64G64B64A64Sint, FormatType::Sint},
    FormatInfo{vk::Format::eR64G64B64A64Sfloat, FormatType::Float},
    FormatInfo{vk::Format::eB10G11R11UfloatPack32, FormatType::Float},
    FormatInfo{vk::Format::eE5B9G9R9UfloatPack32, FormatType::Float},
    FormatInfo{vk::Format::eD16Unorm, FormatType::Depth},
    FormatInfo{vk::Format::eD32Sfloat, FormatType::Depth},
    FormatInfo{vk::Format::eS8Uint, FormatType::Stencil},
    FormatInfo{vk::Format::eD16UnormS8Uint, FormatType::DepthStencil},
    FormatInfo{vk::Format::eD24UnormS8Uint, FormatType::DepthStencil},
    FormatInfo{vk::Format::eD32SfloatS8Uint, FormatType::DepthStencil},
};

bool is_float(vk::Format format);
bool is_sint(vk::Format format);
bool is_uint(vk::Format format);
bool is_depth(vk::Format format);
bool is_stencil(vk::Format format);
bool is_depthstencil(vk::Format format);

}